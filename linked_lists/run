#!/bin/bash

# To get student input :
getinput push > push.c
# Include the student code in the global source file :
# This is required in order to have the student's code in the feedback page !
# Adding tabs before each lines of the submitted code:
sed_tab_output=$(sed -i 's/^/  /' push.c 2>&1)
# Replace the include macro of the global source file with the student's code:
include_output=$(sed -i '/push.c/r push.c' thesis_LinkedList.c 2>&1)
# Remove the include line after adding the student code:
sed_del_output=$(sed -i -e '219d' thesis_LinkedList.c 2>&1)

# Compile the code with the included student's solution
compiler_output=$(gcc -std=c99 -ggdb -O0 -fno-omit-frame-pointer thesis_LinkedList.c -o thesis_LinkedList.o 2>&1)
if [ $? -ne 0 ]; then
  feedback --result failed --feedback "Votre programme ne compile pas"
  exit 1
else
  feedback --result success --feedback "Le programme compile"
fi

# Call hacked Valgrind to get the execution logs
export VALGRIND_LIB="/task/backend/valgrind-3.11.0/inst/lib/valgrind"
valgrind_output=$( backend/valgrind-3.11.0/inst/bin/valgrind --source-filename=thesis_LinkedList.c --trace-filename=thesis_LinkedList.vgtrace ./thesis_LinkedList.o 2>&1)

# Build the execution traces out of the Valgrind logs
gen_trace_ouput=$(backend/generate_traces.py thesis_LinkedList)

# Build the execution graphs from the previously built exec traces
gen_graph_output=$(backend/generate_graph_from_traces.py thesis_LinkedList.trace 2>&1)

#####################################
# Generating the extended feedback: #
#####################################

#Choose a random integer to have a unique folder for each student
id=$RANDOM
dir="stud_feedback_$id"
mkdir $dir

#execution_images subdir of the student's feedback dir
cd $dir
mkdir -p "execution_images"
cd ..

#Copy the execution graphs to the execution_images dir of the student
cp_output=$(cp -r img/* $dir/execution_images/)

#Copy the intermediate trace file in the student's directory
cp thesis_LinkedList.trace $dir

# Crate a unique feedback from the template
# and move it to the student dir
cp_feedback=$(cp demo.html demo_$id.html 2>&1)
cp ./demo_$id.html $dir

# Copy the student's directory to the web-server
# and return the address to this personal feedback
# export HOME=/task
scp_output=$(scp -vvv -F /ssh/config -r $dir inginious@130.104.78.197:/var/www/html/)
if [ $? -ne 0 ]; then
  feedback --result failed --feedback "Erreur scp::
  $(echo "scp: $scp_output")
  "
  exit 1
else
  #feedback --result success --feedback "Improved feedback at URL : http://130.104.78.197/$dir/demo_$id.html !"
  feedback --result success --feedback "Improved feedback at URL : http://localhost:9000/$dir/demo_$id.html !"
fi

